name: Weekly Study Update (Debug Mode - Scripts)
on:
  schedule:
    # ÎîîÎ≤ÑÍ∑∏Ïö©: Îß§ 5Î∂ÑÎßàÎã§ Ïã§Ìñâ (GitHub Actions ÏµúÏÜå Í∞ÑÍ≤©)
    - cron: "*/5 * * * *"
  workflow_dispatch:
    inputs:
      force_reset:
        description: 'Í∞ïÏ†ú Î¶¨ÏÖã (ÏÉà Ï£ºÏ∞®Í∞Ä ÏïÑÎãàÏñ¥ÎèÑ Ïã§Ìñâ)'
        required: false
        default: true  # ÎîîÎ≤ÑÍ∑∏Ïö©ÏúºÎ°ú Í∏∞Î≥∏Í∞í true
        type: boolean
      notification:
        description: 'ÏïåÎ¶º Ï†ÑÏÜ° Ïó¨Î∂Ä'
        required: false
        default: false  # ÎîîÎ≤ÑÍ∑∏Ïö©ÏúºÎ°ú Í∏∞Î≥∏Í∞í false (ÏïåÎ¶º Ïä§Ìå∏ Î∞©ÏßÄ)
        type: boolean
      debug_mode:
        description: 'ÎîîÎ≤ÑÍ∑∏ Î™®Îìú (ÏÉÅÏÑ∏ Î°úÍ∑∏ Ï∂úÎ†•)'
        required: false
        default: true
        type: boolean

env:
  TZ: Asia/Seoul
  DEBUG_MODE: true  # ÎîîÎ≤ÑÍ∑∏ Î™®Îìú ÌôúÏÑ±Ìôî
  FORCE_RESET: true # ÎîîÎ≤ÑÍ∑∏Ïö©ÏúºÎ°ú Ìï≠ÏÉÅ Í∞ïÏ†ú Î¶¨ÏÖã

jobs:
  debug-weekly-update:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Info
        run: |
          echo "üêõ DEBUG MODE: Îß§ 5Î∂ÑÎßàÎã§ Ïã§ÌñâÎêòÎäî ÌÖåÏä§Ìä∏ ÏõåÌÅ¨ÌîåÎ°úÏö∞ (Scripts Î≤ÑÏ†Ñ)"
          echo "‚è∞ Ïã§Ìñâ ÏãúÍ∞Ñ: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo "üîß Ìä∏Î¶¨Í±∞: ${{ github.event_name }}"
          echo "üë§ Ïã§ÌñâÏûê: ${{ github.actor }}"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          
      - name: Install dependencies
        run: |
          pip install requests pytz
          echo "üì¶ ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò ÏôÑÎ£å"
          
      - name: Debug - Check files structure
        run: |
          echo "üìÅ ÌååÏùº Íµ¨Ï°∞ ÌôïÏù∏:"
          echo "=== Root Directory ==="
          ls -la
          echo ""
          echo "=== Scripts Directory ==="
          if [ -d "scripts" ]; then
            ls -la scripts/
          else
            echo "‚ùå scripts ÎîîÎ†âÌÜ†Î¶¨ ÏóÜÏùå"
          fi
          echo ""
          echo "=== Python Scripts Check ==="
          for script in scripts/check_session.py scripts/send_notification.py scripts/create_debug_readme.py; do
            if [ -f "$script" ]; then
              echo "‚úÖ $script Ï°¥Ïû¨"
            else
              echo "‚ùå $script ÏóÜÏùå"
            fi
          done
          
      - name: Check current session info using script
        id: session_check
        run: |
          echo "üîç ÌöåÏ∞® Ï†ïÎ≥¥ ÌôïÏù∏ Ï§ë (Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÇ¨Ïö©)..."
          
          # check_session.pyÍ∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏ÌïòÍ≥† Ïã§Ìñâ
          if [ -f "scripts/check_session.py" ]; then
            echo "üìù scripts/check_session.py Ïã§Ìñâ Ï§ë..."
            
            # Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§ÌñâÌïòÍ≥† Í≤∞Í≥ºÎ•º ÌôòÍ≤ΩÎ≥ÄÏàòÎ°ú Ï†ÄÏû•
            cd scripts
            RESULT=$(python check_session.py 2>&1)
            cd ..
            
            echo "üìã Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ Í≤∞Í≥º:"
            echo "$RESULT"
            
            # Í≤∞Í≥ºÎ•º ÌôòÍ≤ΩÎ≥ÄÏàòÎ°ú ÏÑ§Ï†ï
            echo "$RESULT" | grep "=" >> $GITHUB_ENV
            
            echo "‚úÖ check_session.py Ïã§Ìñâ ÏôÑÎ£å"
          else
            echo "‚ùå scripts/check_session.py ÏóÜÏùå - Ìè¥Î∞± Î™®Îìú"
            
            # Ìè¥Î∞±: Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï
            TODAY=$(date '+%Y-%m-%d')
            WEEK_END=$(date -d '+6 days' '+%Y-%m-%d')
            
            echo "IS_NEW_WEEK=true" >> $GITHUB_ENV
            echo "SESSION_NUMBER=999" >> $GITHUB_ENV
            echo "TODAY=$TODAY" >> $GITHUB_ENV
            echo "WEEK_START=$TODAY" >> $GITHUB_ENV
            echo "WEEK_END=$WEEK_END" >> $GITHUB_ENV
            echo "DEADLINE=$WEEK_END 23:59" >> $GITHUB_ENV
            echo "HAS_SESSION_COUNTER=false" >> $GITHUB_ENV
            echo "TOTAL_WEEKS=0" >> $GITHUB_ENV
            echo "TOTAL_DAYS=0" >> $GITHUB_ENV
            echo "STUDY_START=$TODAY" >> $GITHUB_ENV
          fi
          
      - name: Debug - Show environment variables
        if: github.event.inputs.debug_mode == 'true' || env.DEBUG_MODE == 'true'
        run: |
          echo "üêõ ÌôòÍ≤Ω Î≥ÄÏàò ÌôïÏù∏:"
          echo "  IS_NEW_WEEK: $IS_NEW_WEEK"
          echo "  FORCE_RESET: $FORCE_RESET"
          echo "  SESSION_NUMBER: $SESSION_NUMBER"
          echo "  TODAY: $TODAY"
          echo "  WEEK_START: $WEEK_START"
          echo "  WEEK_END: $WEEK_END"
          echo "  DEADLINE: $DEADLINE"
          echo "  HAS_SESSION_COUNTER: $HAS_SESSION_COUNTER"
          echo "  TOTAL_WEEKS: $TOTAL_WEEKS"
          echo "  TOTAL_DAYS: $TOTAL_DAYS"
          
      - name: Create README backup
        run: |
          if [ -f "README.md" ]; then
            BACKUP_NAME="README_debug_backup_$(date +%Y%m%d_%H%M%S).md"
            cp README.md "$BACKUP_NAME"
            echo "üìÅ ÎîîÎ≤ÑÍ∑∏ Î∞±ÏóÖ ÏÉùÏÑ±: $BACKUP_NAME"
            echo "BACKUP_FILE=$BACKUP_NAME" >> $GITHUB_ENV
          else
            echo "‚ÑπÔ∏è Í∏∞Ï°¥ README.md ÏóÜÏùå"
          fi
          
      - name: Generate README using script
        run: |
          echo "üîÑ README ÏÉùÏÑ± Ï§ë (Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÇ¨Ïö©)..."
          
          if [ -f "scripts/create_debug_readme.py" ]; then
            echo "üìù scripts/create_debug_readme.py Ïã§Ìñâ Ï§ë..."
            
            cd scripts
            if [ "$DEBUG_MODE" = "true" ]; then
              python create_debug_readme.py --debug-mode --try-advanced
            else
              python create_debug_readme.py --try-advanced
            fi
            cd ..
            
            if [ $? -eq 0 ]; then
              echo "‚úÖ Ïä§ÌÅ¨Î¶ΩÌä∏Î•º ÌÜµÌïú README ÏÉùÏÑ± ÏÑ±Í≥µ"
              echo "UPDATE_SUCCESS=true" >> $GITHUB_ENV
            else
              echo "‚ùå Ïä§ÌÅ¨Î¶ΩÌä∏Î•º ÌÜµÌïú README ÏÉùÏÑ± Ïã§Ìå®"
              echo "UPDATE_SUCCESS=false" >> $GITHUB_ENV
            fi
          else
            echo "‚ùå scripts/create_debug_readme.py ÏóÜÏùå - Í∞ÑÎã® README ÏÉùÏÑ±"
            
            # Ìè¥Î∞±: Í∞ÑÎã®Ìïú README ÏÉùÏÑ± (HERE document ÎåÄÏã† echo ÏÇ¨Ïö©)
            echo "# üöÄ ÏïåÍ≥†Î¶¨Ï¶ò Ïä§ÌÑ∞Îîî (Debug Mode - Fallback)" > README.md
            echo "" >> README.md
            echo "## üìÖ ${SESSION_NUMBER}ÌöåÏ∞® ÌòÑÌô©" >> README.md
            echo "**Í∏∞Í∞Ñ**: ${WEEK_START} ~ ${WEEK_END}" >> README.md
            echo "**ÎßàÍ∞ê**: ${DEADLINE}" >> README.md
            echo "" >> README.md
            echo "### ‚ö†Ô∏è Ìè¥Î∞± Î™®ÎìúÎ°ú Ïã§ÌñâÎê®" >> README.md
            echo "" >> README.md
            echo "scripts/create_debug_readme.py ÌååÏùºÏù¥ ÏóÜÏñ¥ÏÑú Í∏∞Î≥∏ READMEÎ•º ÏÉùÏÑ±ÌñàÏäµÎãàÎã§." >> README.md
            echo "" >> README.md
            echo "### üêõ ÎîîÎ≤ÑÍ∑∏ Ï†ïÎ≥¥" >> README.md
            echo "- **Ïã§Ìñâ ÏãúÍ∞Ñ**: $(date '+%Y-%m-%d %H:%M:%S KST')" >> README.md
            echo "- **ÌöåÏ∞®**: ${SESSION_NUMBER}ÌöåÏ∞®" >> README.md
            echo "- **Ìä∏Î¶¨Í±∞**: ${{ github.event_name }}" >> README.md
            echo "- **Ïã§ÌñâÏûê**: ${{ github.actor }}" >> README.md
            echo "" >> README.md
            echo "| Ï∞∏Í∞ÄÏûê | Ïõî | Ìôî | Ïàò | Î™© | Í∏à | ÌÜ† | Ïùº |" >> README.md
            echo "|--------|----|----|----|----|----|----|---|" >> README.md
            echo "| fallback_user | 1000 | | | | | | |" >> README.md
            echo "" >> README.md
            echo "---" >> README.md
            echo "*Auto-updated by GitHub Actions ü§ñ (Fallback Mode)*" >> README.md
            
            echo "‚úÖ Ìè¥Î∞± README ÏÉùÏÑ± ÏôÑÎ£å"
            echo "UPDATE_SUCCESS=true" >> $GITHUB_ENV
          fi
          
      - name: Debug - Show generated README
        if: github.event.inputs.debug_mode == 'true' || env.DEBUG_MODE == 'true'
        run: |
          echo "üìÑ ÏÉùÏÑ±Îêú README.md ÎÇ¥Ïö© (Ï≤´ 30Ï§Ñ):"
          echo "================================================"
          head -30 README.md
          echo "================================================"
          echo "(Ï¥ù $(wc -l < README.md) Ï§Ñ, $(stat -c%s README.md) bytes)"
          
      - name: Commit changes
        if: env.UPDATE_SUCCESS == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action - Debug Scripts"
          
          # Î≥ÄÍ≤ΩÎêú ÌååÏùºÎì§ ÌôïÏù∏
          git add README.md
          git add $BACKUP_FILE 2>/dev/null || true
          git add session_info.json 2>/dev/null || true
          
          if git diff --staged --quiet; then
            echo "üìù Î≥ÄÍ≤Ω ÏÇ¨Ìï≠Ïù¥ ÏóÜÏäµÎãàÎã§."
            echo "CHANGES_COMMITTED=false" >> $GITHUB_ENV
          else
            # Ïª§Î∞ã Î©îÏãúÏßÄÎ•º Î≥ÄÏàòÏóê Ï†ÄÏû•
            COMMIT_TIME=$(date '+%Y-%m-%d %H:%M:%S KST')
            SCRIPT_STATUS=$([ -f "scripts/create_debug_readme.py" ] && echo "ÏÇ¨Ïö©" || echo "Ìè¥Î∞±")
            
            git commit -m "üêõ DEBUG: Ïä§ÌÅ¨Î¶ΩÌä∏ Í∏∞Î∞ò README ÏûêÎèô ÏóÖÎç∞Ïù¥Ìä∏

            üïê Ïã§Ìñâ ÏãúÍ∞Ñ: $COMMIT_TIME
            üéØ ÌöåÏ∞®: ${SESSION_NUMBER}ÌöåÏ∞® (DEBUG)
            ü§ñ Ìä∏Î¶¨Í±∞: ${{ github.event_name }}
            üë§ Ïã§ÌñâÏûê: ${{ github.actor }}
            üìù Ïä§ÌÅ¨Î¶ΩÌä∏: $SCRIPT_STATUS

            ‚ö†Ô∏è Ïù¥Í≤ÉÏùÄ 5Î∂ÑÎßàÎã§ Ïã§ÌñâÎêòÎäî ÎîîÎ≤ÑÍ∑∏ Î™®ÎìúÏûÖÎãàÎã§."
                        
                        git push
                        
                        echo "‚úÖ ÎîîÎ≤ÑÍ∑∏ Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Ïª§Î∞ã ÏôÑÎ£å"
                        echo "CHANGES_COMMITTED=true" >> $GITHUB_ENV
                      fi
                      
      - name: Send notification using script
        if: env.CHANGES_COMMITTED == 'true' && (github.event.inputs.notification == 'true' || env.FORCE_NOTIFICATION == 'true')
        env:
          YEOMIN4242_MATTERMOST_URL: ${{ secrets.YEOMIN4242_MATTERMOST_URL }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "üì¢ ÏïåÎ¶º Ï†ÑÏÜ° Ï§ë (Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÇ¨Ïö©)..."
          
          if [ -f "scripts/send_notification.py" ]; then
            echo "üì® scripts/send_notification.py Ïã§Ìñâ Ï§ë..."
            
            cd scripts
            if [ "$DEBUG_MODE" = "true" ]; then
              python send_notification.py --debug-mode --force-reset
            else
              python send_notification.py --force-reset
            fi
            cd ..
            
            if [ $? -eq 0 ]; then
              echo "‚úÖ Ïä§ÌÅ¨Î¶ΩÌä∏Î•º ÌÜµÌïú ÏïåÎ¶º Ï†ÑÏÜ° ÏôÑÎ£å"
            else
              echo "‚ùå Ïä§ÌÅ¨Î¶ΩÌä∏Î•º ÌÜµÌïú ÏïåÎ¶º Ï†ÑÏÜ° Ïã§Ìå®"
            fi
          else
            echo "‚ùå scripts/send_notification.py ÏóÜÏùå - Í∏∞Î≥∏ ÏïåÎ¶º"
            
            # Ìè¥Î∞±: Í∞ÑÎã®Ìïú curl ÏïåÎ¶º
            if [ -n "$YEOMIN4242_MATTERMOST_URL" ]; then
              CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S KST')
              
              # JSON Î©îÏãúÏßÄ Íµ¨ÏÑ± (ÏûëÏùÄÎî∞Ïò¥ÌëúÎ°ú Í∞êÏã∏ÏÑú Ïù¥Ïä§ÏºÄÏù¥ÌîÑ Î¨∏Ï†ú Ìï¥Í≤∞)
              MESSAGE='üêõ **DEBUG: README ÏûêÎèô ÏóÖÎç∞Ïù¥Ìä∏ (Ìè¥Î∞±)**\n\n‚è∞ ÏãúÍ∞Ñ: '"$CURRENT_TIME"'\nüéØ ÌöåÏ∞®: '"${SESSION_NUMBER}"'ÌöåÏ∞®\nü§ñ Ìä∏Î¶¨Í±∞: ${{ github.event_name }}\n\n‚ö†Ô∏è send_notification.py Ïä§ÌÅ¨Î¶ΩÌä∏Í∞Ä ÏóÜÏñ¥ÏÑú Í∏∞Î≥∏ ÏïåÎ¶ºÏùÑ Ï†ÑÏÜ°ÌñàÏäµÎãàÎã§.'
              
              curl -X POST "$YEOMIN4242_MATTERMOST_URL" \
                -H "Content-Type: application/json" \
                -d '{"text":"'"$MESSAGE"'"}' || echo "Í∏∞Î≥∏ ÏïåÎ¶º Ï†ÑÏÜ° Ïã§Ìå®"
            else
              echo "‚ö†Ô∏è Mattermost webhook URLÏù¥ ÏÑ§Ï†ïÎêòÏßÄ ÏïäÏùå"
            fi
          fi
          
      - name: Debug summary
        if: always()
        run: |
          echo "## üêõ Debug Weekly Update Ïã§Ìñâ Í≤∞Í≥º (Scripts)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**‚ö†Ô∏è Ï£ºÏùò: Ïù¥Í≤ÉÏùÄ 5Î∂ÑÎßàÎã§ Ïã§ÌñâÎêòÎäî Ïä§ÌÅ¨Î¶ΩÌä∏ Í∏∞Î∞ò ÎîîÎ≤ÑÍ∑∏ Î™®ÎìúÏûÖÎãàÎã§**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Ïã§Ìñâ ÏãúÍ∞Ñ**: $(date '+%Y-%m-%d %H:%M:%S KST')" >> $GITHUB_STEP_SUMMARY
          echo "**Ìä∏Î¶¨Í±∞**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Ïã§ÌñâÏûê**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä ÌöåÏ∞® Ï†ïÎ≥¥" >> $GITHUB_STEP_SUMMARY
          echo "- **ÌöåÏ∞®**: ${SESSION_NUMBER}ÌöåÏ∞® (DEBUG)" >> $GITHUB_STEP_SUMMARY
          echo "- **ÎÇ†Ïßú**: ${TODAY}" >> $GITHUB_STEP_SUMMARY
          echo "- **Ï£ºÏ∞®**: ${WEEK_START} ~ ${WEEK_END}" >> $GITHUB_STEP_SUMMARY
          echo "- **Session Counter**: ${HAS_SESSION_COUNTER}" >> $GITHUB_STEP_SUMMARY
          echo "- **ÏôÑÎ£å Ï£ºÏ∞®**: ${TOTAL_WEEKS}Ï£º" >> $GITHUB_STEP_SUMMARY
          echo "- **Ï¥ù ÏßÑÌñâÏùº**: ${TOTAL_DAYS}Ïùº" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìù Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÉÅÌÉú" >> $GITHUB_STEP_SUMMARY
          
          # Ïä§ÌÅ¨Î¶ΩÌä∏ ÌååÏùºÎì§ ÌôïÏù∏
          for script in check_session.py send_notification.py create_debug_readme.py; do
            if [ -f "scripts/$script" ]; then
              echo "‚úÖ **$script**: ÏÇ¨Ïö© Í∞ÄÎä•" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ùå **$script**: ÏóÜÏùå (Ìè¥Î∞± Î™®Îìú)" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üéØ ÏûëÏóÖ Í≤∞Í≥º" >> $GITHUB_STEP_SUMMARY
          
          if [ "$UPDATE_SUCCESS" = "true" ]; then
            echo "‚úÖ **README ÏóÖÎç∞Ïù¥Ìä∏**: ÏÑ±Í≥µ" >> $GITHUB_STEP_SUMMARY
            if [ "$CHANGES_COMMITTED" = "true" ]; then
              echo "‚úÖ **Ïª§Î∞ã**: ÏôÑÎ£å" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ÑπÔ∏è **Ïª§Î∞ã**: Î≥ÄÍ≤ΩÏÇ¨Ìï≠ ÏóÜÏùå" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ùå **README ÏóÖÎç∞Ïù¥Ìä∏**: Ïã§Ìå®" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "$BACKUP_FILE" != "" ]; then
            echo "üìÅ **Î∞±ÏóÖ**: $BACKUP_FILE" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîß Ïä§ÌÅ¨Î¶ΩÌä∏ ÌååÏùº ÏÉùÏÑ±" >> $GITHUB_STEP_SUMMARY
          echo "Îã§Ïùå Ïä§ÌÅ¨Î¶ΩÌä∏Îì§ÏùÑ \`scripts/\` ÎîîÎ†âÌÜ†Î¶¨Ïóê Ï∂îÍ∞ÄÌïòÏÑ∏Ïöî:" >> $GITHUB_STEP_SUMMARY
          echo "- \`check_session.py\`: ÌöåÏ∞® Ï†ïÎ≥¥ ÌôïÏù∏" >> $GITHUB_STEP_SUMMARY
          echo "- \`create_debug_readme.py\`: README ÏÉùÏÑ±" >> $GITHUB_STEP_SUMMARY
          echo "- \`send_notification.py\`: ÏïåÎ¶º Ï†ÑÏÜ°" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîÑ Ï†ïÏÉÅ Î™®Îìú Ï†ÑÌôò" >> $GITHUB_STEP_SUMMARY
          echo "ÌÖåÏä§Ìä∏ ÏôÑÎ£å ÌõÑ:" >> $GITHUB_STEP_SUMMARY
          echo "1. cronÏùÑ \`\"0 0 * * 1\"\` (Îß§Ï£º ÏõîÏöîÏùº)Î°ú Î≥ÄÍ≤Ω" >> $GITHUB_STEP_SUMMARY
          echo "2. \`DEBUG_MODE: false\`Î°ú Î≥ÄÍ≤Ω" >> $GITHUB_STEP_SUMMARY
          echo "3. \`FORCE_RESET: false\`Î°ú Î≥ÄÍ≤Ω" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*üêõ Ïä§ÌÅ¨Î¶ΩÌä∏ Í∏∞Î∞ò ÎîîÎ≤ÑÍ∑∏ Î™®Îìú - Îß§ 5Î∂ÑÎßàÎã§ Ïã§Ìñâ*" >> $GITHUB_STEP_SUMMARY